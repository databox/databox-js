/**
 * Static OpenAPI document of Push API resource
 * Push API resources Open API documentation
 *
 * The version of the OpenAPI document: 0.3.15-sdk.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import PushData from '../model/PushData';

/**
* Default service.
* @module databox/databox/DefaultApi
* @version 2.2.0
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:databox/databox/DefaultApi
    * @class
    * @param {module:databox/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:databox/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the dataDelete operation.
     * @callback module:databox/databox/DefaultApi~dataDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:databox/databox/DefaultApi~dataDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    dataDelete(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/data', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dataMetricKeyDelete operation.
     * @callback module:databox/databox/DefaultApi~dataMetricKeyDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} metricKey 
     * @param {module:databox/databox/DefaultApi~dataMetricKeyDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    dataMetricKeyDelete(metricKey, callback) {
      let postBody = null;
      // verify the required parameter 'metricKey' is set
      if (metricKey === undefined || metricKey === null) {
        throw new Error("Missing the required parameter 'metricKey' when calling dataMetricKeyDelete");
      }

      let pathParams = {
        'metricKey': metricKey
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/data/{metricKey}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dataPost operation.
     * @callback module:databox/databox/DefaultApi~dataPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {Array.<module:databox/model/PushData>} [pushData] 
     * @param {module:databox/databox/DefaultApi~dataPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    dataPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['pushData'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = ['application/json', 'application/vnd.databox.v2+json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/data', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the metrickeysGet operation.
     * @callback module:databox/databox/DefaultApi~metrickeysGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:databox/databox/DefaultApi~metrickeysGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    metrickeysGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/metrickeys', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the metrickeysPost operation.
     * @callback module:databox/databox/DefaultApi~metrickeysPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {Object.<String, Object>} [body] 
     * @param {module:databox/databox/DefaultApi~metrickeysPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    metrickeysPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = ['application/json', 'application/vnd.databox.v2+json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/metrickeys', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pingGet operation.
     * @callback module:databox/databox/DefaultApi~pingGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:databox/databox/DefaultApi~pingGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    pingGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/ping', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
